name: Build and Package

on:
  push:
    tags:
      - "v*" 
jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies (Debian)
        run: |
          sudo apt-get update
          sudo apt-get install -y rpm libarchive-tools

      - name: Configure and build
        run: |
          mkdir build && cd build
          cmake .. && make

      - name: Generate DEB and RPM packages
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          cd build
          cpack -G DEB
          cpack -G RPM

      - name: Create source archives
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          git archive --format=tar.gz --prefix=solver-${GITHUB_REF#refs/tags/}/ -o solver-${GITHUB_REF#refs/tags/}.tar.gz HEAD
          git archive --format=zip --prefix=solver-${GITHUB_REF#refs/tags/}/ -o solver-${GITHUB_REF#refs/tags/}.zip HEAD

      - name: Upload artifacts
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v3
        with:
          name: linux-packages
          path: |
            build/*.deb
            build/*.rpm
            solver-*.tar.gz
            solver-*.zip

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure and build
        run: |
          mkdir build
          cd build
          cmake .. -G "Visual Studio 17 2022" -A x64
          cmake --build . --config Release

      - name: Generate MSI package
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          cd build
          cpack -G WIX

      - name: Create source archives (Windows)
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          7z a -ttar solver-${env:GITHUB_REF#refs/tags/}.tar * > nul
          7z a -tgzip solver-${env:GITHUB_REF#refs/tags/}.tar.gz solver-${env:GITHUB_REF#refs/tags/}.tar > nul
          7z a -tzip solver-${env:GITHUB_REF#refs/tags/}.zip * > nul
          del solver-${env:GITHUB_REF#refs/tags/}.tar > nul

      - name: Upload artifacts
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v3
        with:
          name: windows-packages
          path: |
            build/*.msi
            solver-*.tar.gz
            solver-*.zip

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure and build
        run: |
          mkdir build && cd build
          cmake .. && make

      - name: Generate DMG package
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          cd build
          cpack -G DragNDrop

      - name: Create source archives
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          git archive --format=tar.gz --prefix=solver-${GITHUB_REF#refs/tags/}/ -o solver-${GITHUB_REF#refs/tags/}.tar.gz HEAD
          git archive --format=zip --prefix=solver-${GITHUB_REF#refs/tags/}/ -o solver-${GITHUB_REF#refs/tags/}.zip HEAD

      - name: Upload artifacts
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v3
        with:
          name: macos-packages
          path: |
            build/*.dmg
            solver-*.tar.gz
            solver-*.zip

  release:
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            linux-packages/*
            windows-packages/*
            macos-packages/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
